name: Backend CD

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/<리포지토리-이름>
  CONTAINER_NAME: spring-app
  PORT: "8080"

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17 (Temurin) & Gradle cache
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"
          cache: gradle

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build
        run: ./gradlew clean build -x test

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image (tag with sha & latest)
        run: |
          docker build -t $IMAGE_NAME:${{ github.sha }} -t $IMAGE_NAME:latest .

      - name: Push Docker image
        run: |
          docker push $IMAGE_NAME:${{ github.sha }}
          docker push $IMAGE_NAME:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: Deploy on EC2 via SSH
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          port: 22
          script_stop: true
          script: |
            IMAGE="${{ env.IMAGE_NAME }}"
            TAG="${{ github.sha }}"
            NAME="${{ env.CONTAINER_NAME }}"
            PORT="${{ env.PORT }}"

            docker pull "$IMAGE:$TAG"

            docker stop "$NAME" 2>/dev/null || true
            docker rm "$NAME" 2>/dev/null || true

            docker image prune -f

            docker run -d \
              --name "$NAME" \
              --restart unless-stopped \
              -p 8080:8080 \
              "$IMAGE:$TAG"
